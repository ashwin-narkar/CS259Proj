// -------------------------------------------------------------
// 
// File Name: hdlsrc\RNN_Activation\RNN_Activation.v
// Created: 2021-06-11 12:50:00
// 
// Generated by MATLAB 9.9 and HDL Coder 3.17
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.2
// Target subsystem base rate: 0.2
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.2
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// y_t                           ce_out        0.2
// h_t                           ce_out        0.2
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: RNN_Activation
// Source Path: RNN_Activation
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module RNN_Activation
          (clk,
           reset,
           clk_enable,
           h_t_1_W,
           x_t_U,
           V,
           ce_out,
           y_t,
           h_t);


  input   clk;
  input   reset;
  input   clk_enable;
  input   [31:0] h_t_1_W;  // single
  input   [31:0] x_t_U;  // single
  input   [31:0] V;  // single
  output  ce_out;
  output  [31:0] y_t;  // single
  output  [31:0] h_t;  // single


  wire enb;
  reg [31:0] Delay_out1;  // ufix32
  reg [31:0] Delay1_out1;  // ufix32
  wire [31:0] Add_out1;  // ufix32
  wire [31:0] Tanh_out1;  // ufix32
  reg [31:0] Delay2_out1;  // ufix32
  wire [31:0] Add1_out1;  // ufix32


  assign enb = clk_enable;

  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 32'h00000000;
      end
      else begin
        if (enb) begin
          Delay_out1 <= h_t_1_W;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 32'h00000000;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= x_t_U;
        end
      end
    end



  nfp_add_single u_nfp_add_comp (.nfp_in1(Delay_out1),  // single
                                 .nfp_in2(Delay1_out1),  // single
                                 .nfp_out(Add_out1)  // single
                                 );

  nfp_tanh_single u_nfp_tanh_comp (.nfp_in(Add_out1),  // single
                                   .nfp_out(Tanh_out1)  // single
                                   );

  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 32'h00000000;
      end
      else begin
        if (enb) begin
          Delay2_out1 <= V;
        end
      end
    end



  nfp_add_single u_nfp_add_comp_1 (.nfp_in1(Tanh_out1),  // single
                                   .nfp_in2(Delay2_out1),  // single
                                   .nfp_out(Add1_out1)  // single
                                   );

  assign ce_out = clk_enable;

  assign y_t = Add1_out1;

  assign h_t = Tanh_out1;

endmodule  // RNN_Activation

